services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports: [ "2181:2181" ]

  kafka:
    image: confluentinc/cp-kafka:7.6.1
    depends_on: [ zookeeper ]
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports: [ "9092:9092" ]

  mailpit:
    image: axllent/mailpit:latest
    ports:
      - "1025:1025"   # SMTP
      - "8025:8025"   # Web UI

  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: userdb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports: [ "5432:5432" ]
    volumes:
      - userdb-data:/var/lib/postgresql/data

  userdb-api:
    build:
      context: .
      dockerfile: services/userdb-api/Dockerfile
    depends_on: [ kafka, postgres ]
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/userdb
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      APP_KAFKA_USER_TOPIC: user.account
    ports: [ "8080:8080" ]

  notification-service:
    build:
      context: .
      dockerfile: services/notification-service/Dockerfile
    depends_on: [ kafka, mailpit ]
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      APP_KAFKA_USER_TOPIC: user.account
      SPRING_MAIL_HOST: mailpit
      SPRING_MAIL_PORT: 1025
    ports: [ "8081:8081" ]

volumes:
  userdb-data: